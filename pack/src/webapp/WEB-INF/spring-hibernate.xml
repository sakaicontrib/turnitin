<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">

<beans>


	<!-- create a DAO bean, use the hibernate implementation -->
	<bean id="org.sakaiproject.contentreview.dao.impl.ContentReviewDaoTarget"
			class="org.sakaiproject.contentreview.dao.impl.ContentReviewDaoImpl"
			init-method="init">
		<property name="sessionFactory" 
			ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
		<property name="persistentClasses">
			<list>
				<value>org.sakaiproject.contentreview.model.ContentReviewItem</value>
				<value>org.sakaiproject.contentreview.model.ContentReviewLock</value>
				<value>org.sakaiproject.contentreview.model.ContentReviewRosterSyncItem</value>
			</list>
		</property>
	</bean>

	<!-- This wraps our DAO so that the transactions are managed -->
		<bean id="org.sakaiproject.contentreview.dao.ContentReviewDao"
			class="org.sakaiproject.genericdao.springutil.CurrentClassLoaderTxProxyFactoryBean">
		<property name="transactionManager" 
			ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		<property name="target" 
			ref="org.sakaiproject.contentreview.dao.impl.ContentReviewDaoTarget" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<!-- create a data preloading bean that has transaction protection -->
	<!--  nope we don't do this stuff
	<bean id="org.sakaiproject.contentreview.dao.PreloadData"
			class="org.sakaiproject.contentreview.dao.impl.PreloadDataImpl"
			init-method="init">
		<property name="dao"
			ref="org.sakaiproject.contentreview.dao.ContentReviewDao" />
	</bean> -->

</beans>
